# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment (e.g., dev, staging, prod)'
        required: true
        default: 'dev'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: 'eu-central-1'  # zmień na swój region
      TF_VAR_FILE: 'environments/tfvars/${{ github.event.inputs.env }}.tfvars'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.5.0'  # zmień na wersję, której używasz
      - name: Set TF_VAR_FILE
          run: |
            if [ -z "${{ env.TF_VAR_FILE }}" ]; then
              echo "TF_VAR_FILE not set, using input env"
              echo "TF_VAR_FILE=environments/tfvars/${{ github.event.inputs.env }}.tfvars" >> $GITHUB_ENV
            fi
      - name: Terraform Init
        run: |
          cd environments
          terraform init

      - name: Terraform Validate
        run: |
          cd environments
          terraform validate -var-file=${{ env.TF_VAR_FILE }}

      - name: Terraform Plan
        run: |
          cd environments
          terraform plan -var-file=${{ env.TF_VAR_FILE }}
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          cd environments
          terraform apply -auto-approve -var-file=${{ env.TF_VAR_FILE }}
